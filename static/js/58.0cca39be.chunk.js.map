{"version":3,"file":"static/js/58.0cca39be.chunk.js","mappings":"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","sources":["components/files/assets/shared/desktop/icon-check.svg","components/UI/pages/contact/contactPartners/ContactPartners.jsx","components/UI/pages/contact/contanctForm/styles.jsx","components/UI/pages/contact/contanctForm/ContactForm.jsx","components/UI/pages/contact/Index.jsx"],"sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgIconCheck(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 14,\n    height: 11,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1 5.718L4.893 9.56l8.107-8\",\n    stroke: \"#BA4270\",\n    strokeWidth: 2,\n    fill: \"none\",\n    fillRule: \"evenodd\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconCheck);\nexport default __webpack_public_path__ + \"static/media/icon-check.e88dc5fa8fcdfef4fdc9060d57c99a7c.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { variables } from \"../../../../../settings/mainstyles\";\r\n\r\nimport tesla from \"../../../../files/assets/shared/desktop/tesla-black.svg\";\r\nimport microsoft from \"../../../../files/assets/shared/desktop/microsoft-black.svg\";\r\nimport hp from \"../../../../files/assets/shared/desktop/hewlett-packard-black.svg\";\r\nimport oracle from \"../../../../files/assets/shared/desktop/oracle-black.svg\";\r\nimport google from \"../../../../files/assets/shared/desktop/google-black.svg\";\r\nimport nvidia from \"../../../../files/assets/shared/desktop/nvidia-black.svg\";\r\n\r\nconst Section = styled.section`\r\n  margin: 0 24px 80px 24px;\r\n\r\n  @media (min-width: 600px) {\r\n    margin: 0 0 80px 0;\r\n  }\r\n  @media (min-width: 1200px) {\r\n    margin-left: 50px;\r\n  }\r\n  @media (min-width: 1440px) {\r\n    margin-left: 125px;\r\n  }\r\n`;\r\n\r\nconst Partner = styled.img.attrs((props) => ({\r\n  src: props.src,\r\n}))`\r\n  src: (${(props) => props.logoName}) no-repeat 50% 50%;\r\n  justify-self: center;\r\n  align-self: center;\r\n  margin-top: 40px;\r\n  z-index: 1;\r\n`;\r\n\r\nconst PartnerContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-template-rows: 1fr 1fr 1fr;\r\n\r\n  @media (min-width: 600px) {\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n    grid-template-rows: 1fr 1fr;\r\n    grid-row-gap: 10px;\r\n    grid-column-gap: 55px;\r\n  }\r\n\r\n  @media (min-width: 700px) {\r\n    margin: 0 115px;\r\n  }\r\n\r\n  @media (min-width: 1200px) {\r\n    margin: 0;\r\n    padding-top: 0;\r\n    column-gap: 65px;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nconst PartnersTitle = styled.h3`\r\n  font-family: ${variables.fonts.titleFont};\r\n  font-size: 24px;\r\n  font-weight: 400;\r\n  color: #36536b;\r\n  text-align: center;\r\n  opacity: 75%;\r\n  margin-top: 80px;\r\n\r\n  @media (min-width: 600px) {\r\n    margin: 80px 160px 0 160px;\r\n  }\r\n\r\n  @media (min-width: 1200px) {\r\n    margin: 0;\r\n    width: 445px;\r\n    text-align: left;\r\n  }\r\n`;\r\n\r\nconst ContactPartners = () => {\r\n  return (\r\n    <>\r\n      <Section>\r\n        <PartnersTitle>Join the thousands of innovators already building with us </PartnersTitle>\r\n        <PartnerContainer>\r\n          <Partner src={tesla}></Partner>\r\n          <Partner src={microsoft}></Partner>\r\n          <Partner src={hp}></Partner>\r\n          <Partner src={oracle}></Partner>\r\n          <Partner src={google}></Partner>\r\n          <Partner src={nvidia}></Partner>\r\n        </PartnerContainer>\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactPartners;\r\n","import styled, { css } from \"styled-components\";\r\nimport checkIcon from \"../../../../files/assets/shared/desktop/icon-check.svg\";\r\nimport { Button } from \"../../../components/buttons/styles/style\";\r\nimport { FontDefault, variables } from \"../../../../../settings/mainstyles\";\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const InputStyle = css`\r\n  padding: 20px;\r\n  background-color: transparent;\r\n  font-family: ${variables.fonts.textFont};\r\n  font-size: 15px;\r\n  border: none;\r\n  border-bottom: 1px solid ${(props) => (props.validate ? `rgba(255, 0, 0, 0.5)` : `rgba(54, 83, 107, 0.5)`)};\r\n\r\n  &:focus {\r\n    outline: none;\r\n    border-bottom: 1px solid ${(props) => (props.validate ? `rgba(255, 0, 0, 0.5)` : `rgba(54, 83, 107, 1)`)};\r\n    &::placeholder {\r\n      opacity: 100%;\r\n    }\r\n  }\r\n\r\n  &::placeholder {\r\n    font-family: ${variables.fonts.textFont};\r\n    color: ${(props) => (props.validate ? \"rgba(255, 0, 0, 1)\" : variables.colors.sec_blue)};\r\n    opacity: 50%;\r\n    font-size: 15px;\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  ${InputStyle};\r\n`;\r\n\r\nexport const TextArea = styled.textarea`\r\n  ${InputStyle}\r\n`;\r\n\r\nexport const CheckBox = styled.input`\r\n  appearance: none;\r\n  min-width: 24px;\r\n  height: 24px;\r\n  background-color: ${(props) => (props.mark ? `#BA4270` : `rgba(54, 83, 107, 0.25)`)};\r\n  position: relative;\r\n  margin-right: 26px;\r\n\r\n  &:before {\r\n    content: \"\";\r\n    display: ${(props) => (props.mark ? \"block\" : \"none\")};\r\n    mask: url(${checkIcon}) no-repeat 50% 50%;\r\n    mask-size: contain;\r\n    position: absolute;\r\n    width: 60%;\r\n    height: 100%;\r\n    background-color: white;\r\n    left: 0;\r\n    right: 0;\r\n    top: 42%;\r\n    bottom: 41.71%;\r\n    margin: auto;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 24px 0;\r\n`;\r\n\r\nexport const Invalid = styled.p`\r\n  color: #ff0000;\r\n  opacity: 50%;\r\n  margin-bottom: 0;\r\n  font-size: 11px;\r\n  font-family: ${variables.fonts.textFont};\r\n`;\r\n\r\nexport const NewsletterText = styled(FontDefault)`\r\n  letter-spacing: -0.115385px;\r\n  line-height: 25px;\r\n  margin: 0;\r\n`;\r\n\r\nexport const SubmitButton = styled(Button)`\r\n  align-self: flex-start;\r\n`;\r\n","import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { variables } from \"../../../../../settings/mainstyles\";\r\n\r\nimport { useState } from \"react\";\r\nimport { CheckBox, Form, Input, Invalid, Label, NewsletterText, SubmitButton, TextArea } from \"./styles\";\r\n\r\nconst ContactForm = () => {\r\n  const [error, setError] = useState(false);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      email: \"\",\r\n      company: \"\",\r\n      title: \"\",\r\n      message: \"\",\r\n      newsletter: false,\r\n    },\r\n\r\n    validationSchema: Yup.object({\r\n      name: Yup.string().required(),\r\n      email: Yup.string().required().email(),\r\n      company: Yup.string().required(),\r\n      title: Yup.string().required(),\r\n    }),\r\n\r\n    onSubmit: (values) => {\r\n      localStorage.setItem(\"registration\", JSON.stringify(values));\r\n      formik.resetForm();\r\n    },\r\n  });\r\n\r\n  const popupError = (element) => {\r\n    return element && error ? <Invalid>This field can’t be empty</Invalid> : null;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={formik.handleSubmit} noValidate>\r\n        <Input\r\n          placeholder=\"Name\"\r\n          value={formik.values.name}\r\n          onChange={formik.handleChange}\r\n          name=\"name\"\r\n          validate={formik.errors.name}\r\n        ></Input>\r\n        {popupError(formik.errors.name)}\r\n\r\n        <Input\r\n          placeholder=\"Email Adress\"\r\n          type=\"email\"\r\n          value={formik.values.email}\r\n          onChange={formik.handleChange}\r\n          name=\"email\"\r\n          validate={formik.errors.email}\r\n        ></Input>\r\n        {popupError(formik.errors.email)}\r\n\r\n        <Input\r\n          placeholder=\"Company Name\"\r\n          value={formik.values.company}\r\n          onChange={formik.handleChange}\r\n          name=\"company\"\r\n          validate={formik.errors.company}\r\n        ></Input>\r\n        {popupError(formik.errors.company)}\r\n\r\n        <Input\r\n          placeholder=\"Title\"\r\n          value={formik.values.title}\r\n          onChange={formik.handleChange}\r\n          name=\"title\"\r\n          validate={formik.errors.title}\r\n        ></Input>\r\n        {popupError(formik.errors.title)}\r\n\r\n        <TextArea\r\n          placeholder=\"Message\"\r\n          value={formik.values.message}\r\n          onChange={formik.handleChange}\r\n          name=\"message\"\r\n        ></TextArea>\r\n\r\n        <Label>\r\n          <CheckBox\r\n            type=\"checkbox\"\r\n            checked={formik.values.newsletter}\r\n            mark={formik.values.newsletter}\r\n            onChange={() => formik.setFieldValue(\"newsletter\", !formik.values.newsletter)}\r\n          />\r\n\r\n          <NewsletterText fontColor={\"rgba(54, 83, 107, 1)\"}>\r\n            Stay up-to-date with company announcements and updates to our API\r\n          </NewsletterText>\r\n        </Label>\r\n        <SubmitButton\r\n          type=\"submit\"\r\n          onClick={() => (formik.errors ? setError(true) : setError(false))}\r\n          bgColor=\"transparent\"\r\n          fontColor={variables.colors.sec_blue}\r\n          hoverColor={variables.colors.pri_white}\r\n        >\r\n          Submit\r\n        </SubmitButton>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ContactPartners from \"./contactPartners/ContactPartners\";\r\nimport ContactForm from \"./contanctForm/ContactForm\";\r\nimport { circle, variables } from \"../../../../settings/mainstyles\";\r\n\r\nconst Main = styled.main`\r\n  &:before {\r\n    ${circle}\r\n  }\r\n  @media (min-width: 1200px) {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst Section = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0 24px 80px 24px;\r\n\r\n  @media (min-width: 600px) {\r\n    margin: 0 161px 80px 161px;\r\n  }\r\n\r\n  @media (min-width: 1200px) {\r\n    width: 445px;\r\n    margin: 0 0 80px 50px;\r\n  }\r\n\r\n  @media (min-width: 1440px) {\r\n    margin: 0 0 80px 160px;\r\n  }\r\n`;\r\n\r\nconst ContactTitle = styled.h3`\r\n  font-family: ${variables.fonts.titleFont};\r\n  font-size: 32px;\r\n  font-weight: 400;\r\n  color: ${variables.colors.sec_blue};\r\n  text-align: center;\r\n  margin: 80px 24px 40px 24px;\r\n\r\n  @media (min-width: 600px) {\r\n    font-size: 47px;\r\n    letter-spacing: -0.369231px;\r\n    line-height: 56px;\r\n    margin: 80px 161px 40px 161px;\r\n  }\r\n  @media (min-width: 1200px) {\r\n    text-align: left;\r\n    margin: 80px 0 40px 50px;\r\n    width: 600px;\r\n  }\r\n  @media (min-width: 1440px) {\r\n    margin-left: 160px;\r\n  }\r\n`;\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <>\r\n      <ContactTitle>Submit a help request and we’ll get in touch shortly.</ContactTitle>\r\n      <Main>\r\n        <Section>\r\n          <ContactForm />\r\n        </Section>\r\n        <ContactPartners />\r\n      </Main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n"],"names":["Section","styled","Partner","props","src","logoName","PartnerContainer","PartnersTitle","variables","tesla","microsoft","hp","oracle","google","nvidia","Form","InputStyle","css","validate","Input","TextArea","CheckBox","mark","checkIcon","Label","Invalid","NewsletterText","FontDefault","SubmitButton","Button","useState","error","setError","formik","useFormik","initialValues","name","email","company","title","message","newsletter","validationSchema","Yup","required","onSubmit","values","localStorage","setItem","JSON","stringify","resetForm","popupError","element","handleSubmit","noValidate","placeholder","value","onChange","handleChange","errors","type","checked","setFieldValue","fontColor","onClick","bgColor","hoverColor","Main","circle","ContactTitle"],"sourceRoot":""}